{"version":3,"sources":["Tabbed/index.tsx","images/bounty-farmer.png","Footer/index.tsx","Manage/index.tsx","Bounties/index.tsx","WalletStatus/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","className","p","useStyles","makeStyles","root","flexGrow","Tabbed","classes","React","useState","setValue","Paper","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","tabs","map","tabLabel","Tab","label","content","Footer","src","farmerImage","alt","Manage","MetaMaskButton","size","Bounties","Loader","WalletStatus","Number","window","ethereum","chainId","setChainId","on","newChainId","Outline","undefined","currentNetwork","requiredNetwork","onWrongNetworkMessage","App","Box","Heading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+VAcA,SAASA,EAASC,GAAuB,IAC/BC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,EADG,YACOJ,EADP,8BAGtC,OACE,6CACEK,KAAK,WACLC,OAAQJ,IAAUC,EAClBI,GAAE,0BAAqBJ,GACvBK,kBAAA,qBAA+BL,GAC/BM,UAAU,YACNL,GANN,aAQGF,IAAUC,GACT,cAAC,IAAD,CAAKO,EAAG,EAAR,SACGT,OAOX,IAAMU,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,KAIC,SAASC,EAAOf,GAM7B,IAAMgB,EAAUL,IADf,EAEyBM,IAAMC,SAAS,GAFxC,mBAEMhB,EAFN,KAEaiB,EAFb,KAQD,OACE,eAACC,EAAA,EAAD,CAAOX,UAAWO,EAAQH,KAA1B,UACE,cAACQ,EAAA,EAAD,CACEnB,MAAOA,EACPoB,SARe,SAACC,EAA8BC,GAClDL,EAASK,IAQLC,eAAe,UACfC,UAAU,UACVC,QAAQ,YALV,SAOG3B,EAAM4B,KAAKC,KAAI,gBAAEC,EAAF,EAAEA,SAAF,OAAc,cAACC,EAAA,EAAD,CAAKC,MAAOF,GAAeA,QAE1D9B,EAAM4B,KAAKC,KAAI,WAAY1B,GAAZ,IAAE8B,EAAF,EAAEA,QAAF,OAChB,cAAClC,EAAD,CAAUG,MAAOA,EAAOC,MAAOA,EAA/B,SACG8B,GADwC9B,SClElC,UAA0B,0C,MCG1B,SAAS+B,IACpB,OAAQ,qBAAK3B,GAAG,SAAR,SACJ,qBAAK4B,IAAKC,EAAa3B,UAAU,eAAe4B,IAAI,a,YCH7C,SAASC,IACpB,OAAQ,cAACC,EAAA,EAAD,CAAgBC,KAAK,QAArB,mC,kBCAG,SAASC,IACpB,OAAQ,qBAAKhC,UAAU,qBAAf,SAAoC,cAACiC,EAAA,EAAD,CAAQF,KAAK,U,2BCC9C,SAASG,IAAgB,IAAD,MACL1B,IAAMC,SAAS0B,OAAM,UAACC,OAAOC,gBAAR,aAAC,EAAiBC,UADlC,mBAC5BA,EAD4B,KACnBC,EADmB,KAGnC,OADA,UAAAH,OAAOC,gBAAP,SAAiBG,GAAG,gBAAgB,SAACC,GAAD,OAAwBF,EAAWJ,OAAOM,OACtE,sBAAKzC,UAAU,gBAAf,UACJ,cAAC8B,EAAA,EAAeY,QAAhB,CAAwBX,KAAK,QAA7B,wCAGWY,IAAVL,EACD,cAAC,IAAD,CAAkBM,eAAgBN,EAASO,gBAAiB,EAA5D,SACK,CACDC,sBAAuB,uCAE1B,gCCWMC,MApBf,WACE,OACE,sBAAK/C,UAAU,MAAf,UACE,cAAC,EAAD,IACD,eAACgD,EAAA,EAAD,WACG,cAACC,EAAA,EAAD,uCACA,cAAC,EAAD,CAAQ9B,KAAM,CAAC,CACbE,SAAU,SACVG,QAAS,cAAC,EAAD,KAEX,CACEH,SAAU,SACVG,QAAS,cAACK,EAAD,WAGb,cAAC,EAAD,QCTSqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eaac7615.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport \"./index.css\"\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      className=\"tabpanel\"\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport default function Tabbed(props: {\n  tabs: {\n    tabLabel: string,\n    content: React.ReactElement\n  }[]\n}) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n      >\n        {props.tabs.map(({tabLabel})=><Tab label={tabLabel} key={tabLabel} />)}\n      </Tabs>\n      {props.tabs.map(({content}, index)=>\n      <TabPanel value={value} index={index} key={index}>\n        {content}\n      </TabPanel>)}\n    </Paper>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/bounty-farmer.74145d73.png\";","import farmerImage from '../images/bounty-farmer.png'\nimport \"./index.css\"\n\nexport default function Footer() {\n    return (<div id=\"footer\">\n        <img src={farmerImage} className=\"farmer-image\" alt=\"farmer\" />\n    </div>)\n  }","import { MetaMaskButton } from 'rimble-ui';\n\nexport default function Manage(){\n    return (<MetaMaskButton size=\"large\">Connect with MetaMask</MetaMaskButton>)\n}","import { Loader } from 'rimble-ui';\nimport \"./index.css\"\n\nexport default function Bounties(){\n    return (<div className=\"bounties-container\"><Loader size=\"5em\" /></div>)\n}","import React from 'react'\nimport NetworkIndicator from \"@rimble/network-indicator\"\nimport { MetaMaskButton } from 'rimble-ui';\nimport \"./index.css\"\n\nexport default function WalletStatus() {\n    const [chainId, setChainId] = React.useState(Number(window.ethereum?.chainId));\n    window.ethereum?.on('chainChanged', (newChainId: string) => setChainId(Number(newChainId)));\n    return (<div className=\"accountStatus\">\n        <MetaMaskButton.Outline size=\"small\">\n            Connect with MetaMask\n        </MetaMaskButton.Outline>\n        {chainId!==undefined?\n        <NetworkIndicator currentNetwork={chainId} requiredNetwork={1}>\n            {{\n            onWrongNetworkMessage: \"Wrong network, connect to Mainnet\"\n        }}</NetworkIndicator>\n        :<></>}\n    </div>)\n}","import React from 'react';\nimport { Box, Heading } from \"rimble-ui\";\nimport Tabbed from './Tabbed'\nimport Footer from './Footer'\nimport Manage from './Manage'\nimport Bounties from './Bounties'\nimport WalletStatus from './WalletStatus'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WalletStatus />\n     <Box>\n        <Heading>KEEP Redemption Bounties</Heading>\n        <Tabbed tabs={[{\n          tabLabel: \"Redeem\",\n          content: <Bounties />\n        },\n        {\n          tabLabel: \"Manage\",\n          content: <Manage />\n        }]}/>\n      </Box>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}